% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AIPW_SLearner.R
\name{AIPW_SLearner}
\alias{AIPW_SLearner}
\title{AIPW with Super Learner}
\usage{
AIPW_SLearner(
  X,
  D,
  Y,
  SL.DML.library = c("SL.ranger", "SL.mean"),
  DML.V = 2,
  SL.V = 2,
  core = 1,
  process = TRUE,
  weights = NULL,
  D.family = binomial(),
  p.score = NULL
)
}
\arguments{
\item{X}{Control as data frame}

\item{D}{Treatment vector (Binary)}

\item{Y}{Outcome vector}

\item{SL.DML.library}{SL.library to estimate nuisance functions. Use first method if all SL coefficient are zero.}

\item{DML.V}{Number of folds}

\item{SL.V}{Number of folds in each SuperLearner}

\item{weights}{Sample weights}

\item{D.family}{gaussian() or binomial() to describe the error distribution.}

\item{p.score}{propensity score vector}
}
\value{
A list containing follows:
\item{data}{ Data frame including estimated nuisance}
\item{parameter_estimation}{ Estimation result}
}
\description{
\code{AIPW_SLearner} is used to implement AIPW with Super Learner. Current version trim sample with propensity <= 0.05 or >= 0.95
}
\examples{

# Example data
X <- matrix(rnorm(200,0,1),100)
D <- 2*X[,1] + runif(100,-10,10)
Y <- 3*X[,1] + rnorm(100,0,1)

# Estimation
fit <- AIPW_SLearner(X = X, D = D, Y = Y)
fit$parameter_estimation

}
\references{
Robins, J. M., Rotnitzky, A., & Zhao, L. P. (1994). Estimation of regression coefficients when some regressors are not always observed. Journal of the American statistical Association, 89(427), 846-866.

van der Laan, M. J., Polley, E. C. and Hubbard, A. E. (2007) Super Learner. Statistical Applications of Genetics and Molecular Biology, 6, article 25.

Chernozhukov, V., Chetverikov, D., Demirer, M., Duflo, E., Hansen, C., & Newey, W. (2017). Double/debiased/neyman machine learning of treatment effects. American Economic Review, 107(5), 261-65.
}
